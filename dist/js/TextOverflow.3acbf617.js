import{j as m,e as d,y as p,h as w,o as a,c as r,w as u,m as x,a as t,F as g,k,i as v,v as y,l as b,z as h,t as B}from"./index.03c44043.js";import{_ as O}from"./_plugin-vue_export-helper.c27b6911.js";const T={class:"text"},E={__name:"TextOverflow",setup(R){const i=m({a:[{a:100}]}),c=d();new ResizeObserver(o=>{});const _=()=>{Object.assign(i.a,[{a:200}])};p(()=>{console.log(c.value)});const e=d(1),f=()=>{const o=new Worker(new URL("/sometools/assets/worker-d620369e.js",self.location));o.addEventListener("message",s=>{const{data:l}=s;console.log(l,e.value)}),o.postMessage(e.value)};return(o,s)=>{const l=w("overflow");return a(),r("div",null,[u((a(),r("div",T,[x(" Element.getBoundingClientRect()方法返回Element元素的大小及其相对视口的位置 x, y是该元素左上角相对于浏览器视口左上角的坐标 bottom， left，right， top是该元素相对于浏览器视口左上角的距离 width, height是该元素的宽度和高度 ")])),[[l]]),t("div",{class:"container",ref_key:"container",ref:c},[(a(!0),r(g,null,k(v(i).a,n=>(a(),r("div",{class:"test",style:h({width:n.a+"px"})},B(n),5))),256))],512),t("button",{onClick:_},"btn"),t("div",null,[u(t("input",{type:"text",name:"worker",id:"","onUpdate:modelValue":s[0]||(s[0]=n=>b(e)?e.value=n:null)},null,512),[[y,v(e),void 0,{number:!0}]]),t("button",{onClick:f},"worker")])])}}},C=O(E,[["__scopeId","data-v-ffe88c0c"]]);export{C as default};
